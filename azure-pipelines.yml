# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

# - task: VSBuild@1
#   inputs:
#     solution: '$(solution)'
#     msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

# - task: VSTest@2
#   inputs:
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'build'

# - task: DotNetCoreCLI@2
#   inputs:
#     command: test
#     projects: '**/*Test/*.csproj'
#     arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'

- task: SqlAzureDacpacDeployment@1
  inputs:
    azureSubscription: 'BigCompS-Int1(d50b6b31-cd2f-4c93-83f1-b1acdd32504c)'
    AuthenticationType: 'server'
    ServerName: 'ha-module-server.database.windows.net'
    DatabaseName: 'HighAvailabilityWitness'
    SqlUsername: 'hpcadmin'
    SqlPassword: '!!123abc!!123abc'
    deployType: 'SqlTask'
    SqlFile: '$(System.DefaultWorkingDirectory)/HighAvailabilityModule.Server.SQL/SQLstartup.sql'
    IpDetectionMethod: 'AutoDetect'

- task: SqlAzureDacpacDeployment@1
  inputs:
    azureSubscription: 'BigCompS-Int1(d50b6b31-cd2f-4c93-83f1-b1acdd32504c)'
    AuthenticationType: 'server'
    ServerName: 'ha-module-server.database.windows.net'
    DatabaseName: 'HighAvailabilityWitness'
    SqlUsername: 'hpcadmin'
    SqlPassword: '!!123abc!!123abc'
    deployType: 'SqlTask'
    SqlFile: '$(System.DefaultWorkingDirectory)/HighAvailabilityModule.UnitTest.SQL/tSQLt.class.sql'
    IpDetectionMethod: 'AutoDetect'

- task: SqlAzureDacpacDeployment@1
  inputs:
    azureSubscription: 'BigCompS-Int1(d50b6b31-cd2f-4c93-83f1-b1acdd32504c)'
    AuthenticationType: 'server'
    ServerName: 'ha-module-server.database.windows.net'
    DatabaseName: 'HighAvailabilityWitness'
    SqlUsername: 'hpcadmin'
    SqlPassword: '!!123abc!!123abc'
    deployType: 'SqlTask'
    SqlFile: '$(System.DefaultWorkingDirectory)/HighAvailabilityModule.UnitTest.SQL/MembershipServerSQLUnitTest.sql'
    IpDetectionMethod: 'AutoDetect'

# - task: runtsqltunittests@0
#   inputs:
#     connectionString: 'Server=tcp:ha-module-server.database.windows.net,1433;Initial Catalog=HighAvailabilityWitness;Persist Security Info=False;User ID=hpcadmin;Password=!!123abc!!123abc;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;'
#     queryTimeout: '60'
#     rootOutput: '$(System.DefaultWorkingDirectory)/tSQLt-out'
#     testResultsFileName: 'TEST-Results.xml'
#     enableCodeCoverage: true
#     coberturaFileName: 'Cobertura.xml'
#     htmlReportsOutput: 'AzurePipelines'
#     testOrClassName: '123'

- task: runtsqltunittests@0
  inputs:
    connectionString: 'Server=tcp:ha-module-server.database.windows.net,1433;Initial Catalog=HighAvailabilityWitness;Persist Security Info=False;User ID=hpcadmin;Password=!!123abc!!123abc;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;'
    queryTimeout: '60'
    rootOutput: '$(System.DefaultWorkingDirectory)/tSQLt-out'
    testResultsFileName: 'TEST-Results.xml'
    enableCodeCoverage: false
    coberturaFileName: 'Cobertura.xml'
    htmlReportsOutput: 'AzurePipelines'

# - task: PublishTestResults@2
#   inputs:
#     testResultsFormat: 'JUnit'
#     testResultsFiles: '**/TEST-*.xml'

# - task: PublishCodeCoverageResults@1
#   inputs:
#     codeCoverageTool: 'Cobertura'
#     summaryFileLocation: '$(Build.SourcesDirectory)/out/Cobertura.xml'
#     reportDirectory: '$(Build.SourcesDirectory)/out/AzurePipelines'
